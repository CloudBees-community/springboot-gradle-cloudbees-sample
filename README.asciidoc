SpringBoot CloudBees Hello
==========================

image:springboot-icon.png[Spring Boot, 50, 50, link="http://projects.spring.io/spring-boot"] image:https://jenkins-ci.org/sites/default/files/images/CloudBees-logo.thumbnail.png[CloudBees, link="http://www.cloudbees.com/"]

This sample project demonstrates how to build and deploy a http://projects.spring.io/spring-boot/[Spring Boot] application to http://www.cloudbees.com/[CloudBees].  It's based upon the sample application in the Spring Boot http://spring.io/guides/gs/spring-boot/[Getting Started Guide] but includes several changes to allow easy deployment to CloudBees.


== Changes for CloudBees

. A +ServerProperties+ bean is created to set the Servlet container port to +System.getProperty("app.port")+
. The +build.gradle+ file is configured for deployment to CloudBees using a https://github.com/bmuschko/gradle-cloudbees-plugin/pull/2[modified] version of the https://github.com/bmuschko/gradle-cloudbees-plugin[Gradle CloudBees Plugin]

Note:: Until the pull request is accepted (and a new version is released) or I release the modified version to a public Maven repository, you'll need to check out the source for that branch, build the updated plugiin locally and install into your local Maven repo.

== Running Locally

To run the sample app locally:

    gradle build
    java -jar build/libs/gs-spring-boot-0.1.0.jar

The app will be built and running locally at http://localhost:8080/

== Deploying to CloudBees

To deploy to CloudBees:

. Edit +build.gradle+ and set your CloudBees +appId+
. Make soure your https://github.com/bmuschko/gradle-cloudbees-plugin#setting-api-credentials[CloudBees API Credentials are setup]
. Run the following command:

    gradle cloudBeesAppDeployArchive

The app will be built as a http://projects.spring.io/spring-boot/docs/spring-boot-tools/spring-boot-loader/README.html[Spring Boot JAR] and deployed to CloudBees.

== Deploying as a ZIP

The app can also be deployed to CloudBees as a zipfile containg the simple app JAR and all the dependency jars. This is supported by the modified Gradle CloudBees Plugin but needs minor changes to +build.gradle+ to correctly create the zipfile and matching +classpath+ parameter.  TBD.

== Deploying as a WAR

For completeness it would be nice to also be able to build a WAR and deploy it to CloudBees using one of the built-in servlet containers.  Contributions welcome.






    
